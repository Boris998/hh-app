/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LeaderboardsRouteImport } from './routes/leaderboards'
import { Route as FeedRouteImport } from './routes/feed'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProfileIndexRouteImport } from './routes/profile/index'
import { Route as ActivitiesIndexRouteImport } from './routes/activities/index'
import { Route as ProfileActivitiesRouteImport } from './routes/profile/activities'
import { Route as ProfileLayoutRouteImport } from './routes/profile/_layout'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as ActivitiesCreateRouteImport } from './routes/activities/create'

const ProfileRouteImport = createFileRoute('/profile')()

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const LeaderboardsRoute = LeaderboardsRouteImport.update({
  id: '/leaderboards',
  path: '/leaderboards',
  getParentRoute: () => rootRouteImport,
} as any)
const FeedRoute = FeedRouteImport.update({
  id: '/feed',
  path: '/feed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProfileRoute,
} as any)
const ActivitiesIndexRoute = ActivitiesIndexRouteImport.update({
  id: '/activities/',
  path: '/activities/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileActivitiesRoute = ProfileActivitiesRouteImport.update({
  id: '/activities',
  path: '/activities',
  getParentRoute: () => ProfileRoute,
} as any)
const ProfileLayoutRoute = ProfileLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ProfileRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ActivitiesCreateRoute = ActivitiesCreateRouteImport.update({
  id: '/activities/create',
  path: '/activities/create',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/feed': typeof FeedRoute
  '/leaderboards': typeof LeaderboardsRoute
  '/activities/create': typeof ActivitiesCreateRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/profile': typeof ProfileLayoutRoute
  '/profile/activities': typeof ProfileActivitiesRoute
  '/activities': typeof ActivitiesIndexRoute
  '/profile/': typeof ProfileIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/feed': typeof FeedRoute
  '/leaderboards': typeof LeaderboardsRoute
  '/activities/create': typeof ActivitiesCreateRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/profile': typeof ProfileIndexRoute
  '/profile/activities': typeof ProfileActivitiesRoute
  '/activities': typeof ActivitiesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/feed': typeof FeedRoute
  '/leaderboards': typeof LeaderboardsRoute
  '/activities/create': typeof ActivitiesCreateRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/profile': typeof ProfileRouteWithChildren
  '/profile/_layout': typeof ProfileLayoutRoute
  '/profile/activities': typeof ProfileActivitiesRoute
  '/activities/': typeof ActivitiesIndexRoute
  '/profile/': typeof ProfileIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/feed'
    | '/leaderboards'
    | '/activities/create'
    | '/auth/login'
    | '/auth/register'
    | '/profile'
    | '/profile/activities'
    | '/activities'
    | '/profile/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/feed'
    | '/leaderboards'
    | '/activities/create'
    | '/auth/login'
    | '/auth/register'
    | '/profile'
    | '/profile/activities'
    | '/activities'
  id:
    | '__root__'
    | '/'
    | '/feed'
    | '/leaderboards'
    | '/activities/create'
    | '/auth/login'
    | '/auth/register'
    | '/profile'
    | '/profile/_layout'
    | '/profile/activities'
    | '/activities/'
    | '/profile/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FeedRoute: typeof FeedRoute
  LeaderboardsRoute: typeof LeaderboardsRoute
  ActivitiesCreateRoute: typeof ActivitiesCreateRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  ProfileRoute: typeof ProfileRouteWithChildren
  ActivitiesIndexRoute: typeof ActivitiesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/leaderboards': {
      id: '/leaderboards'
      path: '/leaderboards'
      fullPath: '/leaderboards'
      preLoaderRoute: typeof LeaderboardsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/feed': {
      id: '/feed'
      path: '/feed'
      fullPath: '/feed'
      preLoaderRoute: typeof FeedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof ProfileRoute
    }
    '/activities/': {
      id: '/activities/'
      path: '/activities'
      fullPath: '/activities'
      preLoaderRoute: typeof ActivitiesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/activities': {
      id: '/profile/activities'
      path: '/activities'
      fullPath: '/profile/activities'
      preLoaderRoute: typeof ProfileActivitiesRouteImport
      parentRoute: typeof ProfileRoute
    }
    '/profile/_layout': {
      id: '/profile/_layout'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLayoutRouteImport
      parentRoute: typeof ProfileRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/activities/create': {
      id: '/activities/create'
      path: '/activities/create'
      fullPath: '/activities/create'
      preLoaderRoute: typeof ActivitiesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface ProfileRouteChildren {
  ProfileLayoutRoute: typeof ProfileLayoutRoute
  ProfileActivitiesRoute: typeof ProfileActivitiesRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
}

const ProfileRouteChildren: ProfileRouteChildren = {
  ProfileLayoutRoute: ProfileLayoutRoute,
  ProfileActivitiesRoute: ProfileActivitiesRoute,
  ProfileIndexRoute: ProfileIndexRoute,
}

const ProfileRouteWithChildren =
  ProfileRoute._addFileChildren(ProfileRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FeedRoute: FeedRoute,
  LeaderboardsRoute: LeaderboardsRoute,
  ActivitiesCreateRoute: ActivitiesCreateRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  ProfileRoute: ProfileRouteWithChildren,
  ActivitiesIndexRoute: ActivitiesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
